/* dex/css/loading.css */
/* Styles for the initial loading overlay and subsequent content loaders */
/* dex/css/loading.css */
/* Styles for the initial loading overlay and subsequent content loaders */

/* Initial Full Screen Loading Overlay */
.initial-loading-overlay {
    position: fixed; /* Cover the entire viewport */
    inset: 0;
    background-color: var(--color-bg-dark, #111827); /* Use CSS variable with fallback */
    z-index: 9999; /* Ensure it's on top */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    opacity: 1;
    visibility: visible;
    /* Smooth fade-out transition */
    transition: opacity 0.6s ease-out, visibility 0s linear 0.6s;
}

/* State when the app is loaded */
.initial-loading-overlay.loaded {
    opacity: 0;
    visibility: hidden;
    transition-delay: 0s, 0.6s; /* Delay visibility hide until opacity transition ends */
    pointer-events: none; /* Prevent interaction when hidden */
}

/* Container for the loading progress bar and text */
.loaderBody {
    width: 90%; /* Responsive width */
    max-width: 25em; /* Max width for larger screens */
    padding: 1rem;
}

/* Background of the progress bar */
.progress {
    width: 100%;
    background-color: var(--color-bg-light-panel, #374151);
    border: 1px solid var(--color-border, #4b5563);
    position: relative;
    height: 1.5em; /* Bar height */
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.75em; /* Rounded corners */
    overflow: hidden; /* Keep the animated bar inside */
    box-shadow: 0 2px 4px rgba(0,0,0,0.2), inset 0 1px 2px rgba(0,0,0,0.1);
}

/* The moving/animated part of the progress bar */
.progressBar {
    width: 100%;
    /* Gradient for visual appeal */
    background: linear-gradient(120deg, var(--color-primary, #ef4444) 5%, var(--color-secondary, #f97316) 95%);
    height: inherit;
    position: absolute;
    top: 0;
    left: 0;
    transform: translateX(-100%); /* Start off-screen */
    /* Initial indeterminate loading animation - will be overridden by JS */
    animation: loadingAnimation 2s ease-in-out infinite;
     /* Add transition for smoother updates when JS sets progress */
    transition: transform 0.5s cubic-bezier(0.65, 0, 0.35, 1);
}

/* Text overlay on the progress bar */
.loader-text {
    position: relative; /* Ensure text is above the progress bar */
    z-index: 1;
    display: flex;
    flex-direction: row;
    font-weight: 600; /* Bolder text */
    color: var(--color-text-primary, #f9fafb);
    text-shadow: 1px 1px 2px rgba(0,0,0,0.7); /* Make text readable */
    font-size: 0.85rem;
    letter-spacing: 1px;
}

/* Individual letters for animation */
.element {
    animation: pulse 1.5s ease-in-out infinite alternate; /* Pulsing effect */
    display: inline-block;
    margin: 0 1px; /* Spacing between letters */
}

/* Stagger the animation delay for each letter */
.element:nth-child(n) {
    animation-delay: calc(var(--index, 1) * 60ms);
}


/* Loaders for specific content sections (e.g., grid, TCG, Detail View) */
.subsequent-loader {
    display: flex; /* Use flex for alignment */
    flex-direction: row; /* Align spinner and text horizontally */
    align-items: center;
    justify-content: center;
    padding: 2rem;
    background-color: rgba(31, 41, 55, 0.7); /* Semi-transparent background */
    border-radius: 0.5rem;
    z-index: 10; /* Ensure it's above the content it covers */
    color: var(--color-text-primary); /* Ensure text is visible */
     position: absolute; /* Position relative to parent */
     inset: 0; /* Cover parent */
}

/* Spinner animation (Consolidated definition) */
.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(255, 255, 255, 0.1); /* Light border */
    border-radius: 50%; /* Make it circular */
    border-top-color: var(--color-primary, #ef4444); /* Color for the spinning part */
    animation: spin 1s linear infinite; /* Use linear for smooth spin */
    margin-right: 0.75rem; /* Space between spinner and text */
}

/* Smaller spinner variant */
.spinner-sm {
    width: 24px;
    height: 24px;
    border-width: 3px;
     margin-right: 0.5rem;
}

/* Larger spinner variant */
.spinner-lg {
    width: 60px;
    height: 60px;
    border-width: 5px;
     margin-right: 1rem;
}

/* Loader Text (if needed next to subsequent loaders) */
.subsequent-loader p {
     font-size: 1rem;
     font-weight: 500;
}
.subsequent-loader .spinner-sm + p {
     font-size: 0.85rem;
}


/* Animation Keyframes */

/* Pulsing animation for text */
@keyframes pulse {
    0%, 100% {
        opacity: 0.7;
        transform: scale(1) translateY(0);
    }
    50% {
        opacity: 1;
        transform: scale(1.05) translateY(-2px); /* Slight lift and scale up */
    }
}

/* Spinning animation for spinners */
@keyframes spin {
    to {
        transform: rotate(360deg); /* Full rotation */
    }
}

/* Indeterminate progress bar animation */
@keyframes loadingAnimation {
    0% {
        transform: translateX(-100%); /* Start left */
    }
    50% {
        transform: translateX(0%); /* Move to fill half (illusion of movement) */
    }
    100% {
        transform: translateX(100%); /* Move off right */
    }
}

/* Card fade-in animation */
@keyframes fadeInCard {
    from {
        opacity: 0;
        transform: translateY(10px) scale(0.98);
     }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

/* Apply animation to grid cards when .animated class is added */
.pokedex-grid-card {
     opacity: 0; /* Start invisible for animation */
}
.pokedex-grid-card.animated {
    animation: fadeInCard 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards;
}

/* Stagger card animations using CSS (if preferred over JS delays) */
/* Example: Stagger every 6th item */
/*
.pokedex-grid-card:nth-child(6n+1) { animation-delay: 0.05s; }
.pokedex-grid-card:nth-child(6n+2) { animation-delay: 0.1s; }
.pokedex-grid-card:nth-child(6n+3) { animation-delay: 0.15s; }
.pokedex-grid-card:nth-child(6n+4) { animation-delay: 0.2s; }
.pokedex-grid-card:nth-child(6n+5) { animation-delay: 0.25s; }
.pokedex-grid-card:nth-child(6n+6) { animation-delay: 0.3s; }
*/


/* Styles for error messages */
.error-message {
    background-color: rgba(220, 38, 38, 0.8); /* Semi-transparent red */
    padding: 1rem;
    border-radius: 0.375rem;
    text-align: center;
    color: white;
    font-weight: 500;
    border: 1px solid var(--color-error, #dc2626);
    margin: 1rem; /* Add margin if shown inline */
}

/* More subtle error message style */
.error-subtle {
    background-color: rgba(220, 38, 38, 0.15); /* Very light red */
    color: var(--color-error, #dc2626);
    border: 1px solid var(--color-error, #dc2626);
    padding: 0.75rem;
    border-radius: 0.375rem;
    text-align: center;
    font-size: 0.9rem;
     margin: 1rem;
}

/* Ensure grid container has minimum height to show loader */
#pokedex-grid-container {
     position: relative; /* Needed for absolute positioning of loader */
     min-height: 400px; /* Adjust as needed */
}

/* Include other necessary styles previously defined (tabs, buttons, TCG, etc.) below */
/* ... (Keep the relevant styles for .tab-button, .sub-tab-button, TCG, etc.) ... */

/* Make sure UI element styles don't conflict with loading styles */
.image-toggle-button {
    background-color: rgba(0, 0, 0, 0.3);
    color: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    width: 2.25rem; /* 36px */
    height: 2.25rem; /* 36px */
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    cursor: pointer;
}
.image-toggle-button:hover {
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
}
.image-toggle-button.active {
    background-color: var(--color-accent, #3b82f6);
    color: white;
    border-color: transparent;
}
.image-toggle-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* ... include other necessary styles from the original loading.css ... */
/* --- Stat Bar --- */
.stat-bar-bg {
    background-color: rgba(0, 0, 0, 0.2);
    height: 6px;
    border-radius: 3px;
    overflow: hidden; /* Ensure inner bar stays rounded */
}
.stat-bar {
    transition: width 0.8s cubic-bezier(0.25, 1, 0.5, 1);
    height: 6px;
    border-radius: 3px;
}

/* --- TCG Styles (Keep relevant ones) --- */
.tcg-card {
    background-color: var(--color-bg-panel);
    border-radius: 0.5rem;
    overflow: hidden;
    border: 1px solid var(--color-border-light);
    display: flex;
    flex-direction: column;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}
.tcg-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 10px rgba(0,0,0,0.3);
}
/* ... other TCG styles ... */
/* Initial Full Screen Loading Overlay */
.initial-loading-overlay {
    position: fixed; /* Cover the entire viewport */
    inset: 0;
    background-color: var(--color-bg-dark, #111827); /* Use CSS variable with fallback */
    z-index: 9999; /* Ensure it's on top */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    opacity: 1;
    visibility: visible;
    /* Smooth fade-out transition */
    transition: opacity 0.6s ease-out, visibility 0s linear 0.6s;
}

/* State when the app is loaded */
.initial-loading-overlay.loaded {
    opacity: 0;
    visibility: hidden;
    transition-delay: 0s; /* Remove delay for hiding */
    pointer-events: none; /* Prevent interaction when hidden */
}

/* Container for the loading progress bar and text */
.loaderBody {
    width: 90%; /* Responsive width */
    max-width: 25em; /* Max width for larger screens */
    padding: 1rem;
}

/* Background of the progress bar */
.progress {
    width: 100%;
    background-color: var(--color-bg-light-panel, #374151);
    border: 1px solid var(--color-border, #4b5563);
    position: relative;
    height: 1.5em; /* Bar height */
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0.75em; /* Rounded corners */
    overflow: hidden; /* Keep the animated bar inside */
    box-shadow: 0 2px 4px rgba(0,0,0,0.2), inset 0 1px 2px rgba(0,0,0,0.1);
}

/* The moving/animated part of the progress bar */
.progressBar {
    width: 100%;
    /* Gradient for visual appeal */
    background: linear-gradient(120deg, var(--color-primary, #ef4444) 5%, var(--color-secondary, #f97316) 95%);
    height: inherit;
    position: absolute;
    top: 0;
    left: 0;
    transform: translateX(-100%); /* Start off-screen */
    /* Indeterminate loading animation */
    animation: loadingAnimation 2s ease-in-out infinite;
}

/* Text overlay on the progress bar */
.loader-text {
    position: relative; /* Ensure text is above the progress bar */
    z-index: 1;
    display: flex;
    flex-direction: row;
    font-weight: 600; /* Bolder text */
    color: var(--color-text-primary, #f9fafb);
    text-shadow: 1px 1px 2px rgba(0,0,0,0.7); /* Make text readable */
    font-size: 0.85rem;
    letter-spacing: 1px;
}

/* Individual letters for animation */
.element {
    animation: pulse 1.5s ease-in-out infinite alternate; /* Pulsing effect */
    display: inline-block;
    margin: 0 1px; /* Spacing between letters */
}

/* Stagger the animation delay for each letter */
.element:nth-child(n) {
    animation-delay: calc(var(--index, 1) * 60ms);
}

/* Loaders for specific content sections (e.g., grid, TCG) */
.subsequent-loader {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    background-color: rgba(31, 41, 55, 0.7); /* Semi-transparent background */
    border-radius: 0.5rem;
    z-index: 10; /* Ensure it's above the content it covers */
}

/* Spinner animation */
.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(255, 255, 255, 0.1); /* Light border */
    border-radius: 50%; /* Make it circular */
    border-top-color: var(--color-primary, #ef4444); /* Color for the spinning part */
    animation: spin 1s ease-in-out infinite; /* Spin animation */
    margin-bottom: 0.75rem;
}

/* Smaller spinner variant */
.spinner-sm {
    width: 24px;
    height: 24px;
    border-width: 3px;
}

/* Larger spinner variant */
.spinner-lg {
    width: 60px;
    height: 60px;
    border-width: 5px;
}


/* Animation Keyframes */

/* Pulsing animation for text */
@keyframes pulse {
    0%, 100% {
        opacity: 0.7;
        transform: scale(1) translateY(0);
    }
    50% {
        opacity: 1;
        transform: scale(1.05) translateY(-2px); /* Slight lift and scale up */
    }
}

/* Spinning animation for spinners */
@keyframes spin {
    to {
        transform: rotate(360deg); /* Full rotation */
    }
}

/* Indeterminate progress bar animation */
@keyframes loadingAnimation {
    0% {
        transform: translateX(-100%); /* Start left */
    }
    50% {
        transform: translateX(0); /* Move to center */
    }
    100% {
        transform: translateX(100%); /* Move off right */
    }
}

/* Styles for error messages */
.error-message {
    background-color: rgba(220, 38, 38, 0.8); /* Semi-transparent red */
    padding: 1rem;
    border-radius: 0.375rem;
    text-align: center;
    color: white;
    font-weight: 500;
    border: 1px solid var(--color-error, #dc2626);
}

/* More subtle error message style */
.error-subtle {
    background-color: rgba(220, 38, 38, 0.15); /* Very light red */
    color: var(--color-error, #dc2626);
    border: 1px solid var(--color-error, #dc2626);
    padding: 0.75rem;
    border-radius: 0.375rem;
    text-align: center;
    font-size: 0.9rem;
}

/* Add styles for specific UI elements mentioned in JS if missing from dex.css */
.image-toggle-button {
    background-color: rgba(0, 0, 0, 0.3);
    color: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    width: 2.25rem; /* 36px */
    height: 2.25rem; /* 36px */
    display: inline-flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    cursor: pointer;
}
.image-toggle-button:hover {
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
}
.image-toggle-button.active {
    background-color: var(--color-accent, #3b82f6);
    color: white;
    border-color: transparent;
}
.image-toggle-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.detail-section-title {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--color-accent, #3b82f6);
    margin-bottom: 0.75rem;
    text-transform: uppercase;
    letter-spacing: 0.05em;
}

.tab-button {
    padding: 0.5rem 1rem;
    cursor: pointer;
    border-bottom: 2px solid transparent;
    color: var(--color-text-secondary);
    transition: all 0.2s ease;
    font-size: 0.9rem;
    font-weight: 500;
}
.tab-button:hover {
    color: var(--color-text-primary);
    border-bottom-color: var(--color-border-light);
}
.tab-button.active {
    color: var(--color-text-primary);
    font-weight: 600;
    /* Active color set by JS using --dynamic-type-color */
}

.sub-tab-button {
    padding: 0.3rem 0.8rem;
    cursor: pointer;
    border-radius: 0.25rem;
    color: var(--color-text-secondary);
    background-color: transparent;
    transition: all 0.2s ease;
    font-size: 0.8rem;
    border: 1px solid transparent;
}
.sub-tab-button:hover {
    background-color: rgba(255, 255, 255, 0.05);
    color: var(--color-text-primary);
}
.sub-tab-button.active {
    color: white;
    font-weight: 500;
     /* Active color set by JS using --dynamic-type-color */
}

.tab-content, .sub-tab-content {
    display: none;
}
.tab-content.active, .sub-tab-content.active {
    display: block;
    animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
    from { opacity: 0; transform: translateY(5px); }
    to { opacity: 1; transform: translateY(0); }
}

.stat-bar-bg {
    background-color: rgba(0, 0, 0, 0.2);
    height: 6px; /* Thinner bar */
}
.stat-bar {
    transition: width 0.8s cubic-bezier(0.25, 1, 0.5, 1); /* Smooth transition */
    height: 6px;
}

.sort-button {
    background-color: var(--color-bg-panel);
    border: 1px solid var(--color-border);
    color: var(--color-text-secondary);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.75rem;
    transition: all 0.2s ease;
}
.sort-button:hover {
    border-color: var(--color-border-light);
    color: var(--color-text-primary);
}
.sort-button.active {
     /* Active color set by JS */
    color: white;
    border-color: transparent;
}

.pagination-button {
    background-color: var(--color-bg-panel);
    border: 1px solid var(--color-border);
    color: var(--color-text-secondary);
    padding: 0.3rem 0.6rem;
    border-radius: 0.25rem;
    font-size: 0.8rem;
    transition: all 0.2s ease;
}
.pagination-button:hover:not(:disabled) {
    border-color: var(--color-border-light);
    color: var(--color-text-primary);
}
.pagination-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* TCG Specific Styles */
.tcg-filter-input, .tcg-filter-select {
    background-color: var(--color-bg-panel);
    border: 1px solid var(--color-border);
    color: var(--color-text-primary);
    padding: 0.5rem;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    width: 100%;
}
.tcg-filter-input:focus, .tcg-filter-select:focus {
     outline: none;
    border-color: var(--color-focus);
    box-shadow: 0 0 0 1px var(--color-focus);
}
.tcg-filter-select {
     appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23a0aec0' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 0.5rem center;
    background-repeat: no-repeat;
    background-size: 1em 1em;
    padding-right: 2.5rem; /* Space for arrow */
}

.tcg-set-group {
    border: 1px solid var(--color-border);
    border-radius: 0.5rem;
    margin-bottom: 1rem;
    background-color: rgba(0,0,0,0.1);
    overflow: hidden;
}
.tcg-set-header {
    padding: 0.75rem 1rem;
    background-color: rgba(0,0,0,0.2);
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-weight: 600;
    color: var(--color-text-secondary);
    transition: background-color 0.2s ease;
}
.tcg-set-header:hover {
    background-color: rgba(0,0,0,0.3);
    color: var(--color-text-primary);
}
.tcg-set-header.collapsed + .tcg-set-content {
    display: none;
}
.tcg-set-content {
    padding: 1rem;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    gap: 1rem;
}

.tcg-card {
    background-color: var(--color-bg-panel);
    border-radius: 0.5rem;
    overflow: hidden;
    border: 1px solid var(--color-border-light);
    display: flex;
    flex-direction: column;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}
.tcg-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 10px rgba(0,0,0,0.3);
}
.tcg-card-image {
    width: 100%;
    aspect-ratio: 63 / 88; /* Standard card aspect ratio */
    object-fit: cover;
    background-color: var(--color-bg-light-panel);
}
.tcg-card-details {
    padding: 0.75rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}
.tcg-card-header {
    margin-bottom: 0.5rem;
}
.tcg-card-header h5 {
    font-size: 0.9rem;
    font-weight: 600;
    margin-bottom: 0.25rem;
    line-height: 1.2;
}
.tcg-hp {
    font-size: 0.8rem;
    font-weight: normal;
    color: var(--color-text-secondary);
    margin-left: 0.25rem;
}
.tcg-card-metadata {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 0.25rem;
}
.tcg-type-icon {
    display: inline-block;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-size: cover; /* Or contain */
    border: 1px solid rgba(0,0,0,0.3);
}
/* Add background images for TCG type icons if you have them */
.tcg-type-Colorless { background-color: var(--tcg-type-Colorless); }
.tcg-type-Darkness { background-color: var(--tcg-type-Darkness); }
.tcg-type-Dragon { background-color: var(--tcg-type-Dragon); }
.tcg-type-Fairy { background-color: var(--tcg-type-Fairy); }
.tcg-type-Fighting { background-color: var(--tcg-type-Fighting); }
.tcg-type-Fire { background-color: var(--tcg-type-Fire); }
.tcg-type-Grass { background-color: var(--tcg-type-Grass); }
.tcg-type-Lightning { background-color: var(--tcg-type-Lightning); }
.tcg-type-Metal { background-color: var(--tcg-type-Metal); }
.tcg-type-Psychic { background-color: var(--tcg-type-Psychic); }
.tcg-type-Water { background-color: var(--tcg-type-Water); }

.tcg-rarity-badge {
    font-size: 0.65rem;
    padding: 0.1rem 0.4rem;
    border-radius: 0.25rem;
    background-color: rgba(255, 255, 255, 0.1);
    color: var(--color-text-secondary);
    border: 1px solid var(--color-border);
    white-space: nowrap;
}
/* Add specific rarity colors if desired */
.tcg-rarity-badge.rareultra, .tcg-rarity-badge.raresecret, .tcg-rarity-badge.specialillustrationrare { border-color: gold; color: gold; }

.tcg-card-subtext {
    font-size: 0.75rem;
    color: var(--color-text-secondary);
    margin-top: auto; /* Push to bottom */
    padding-top: 0.5rem;
    border-top: 1px dashed var(--color-border);
    display: flex;
    justify-content: space-between;
}

.tcg-preview-label {
    font-size: 0.7rem;
    font-weight: 600;
    color: var(--color-text-secondary);
    margin-top: 0.5rem;
}
.tcg-preview-content {
    font-size: 0.75rem;
    color: var(--color-text-primary);
    line-height: 1.3;
    max-height: 2.6em; /* Limit height */
    overflow: hidden;
    text-overflow: ellipsis;
}

/* TCG Lightbox Specifics */
.lightbox-detail-title {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--color-accent);
    margin-top: 1rem;
    margin-bottom: 0.5rem;
    padding-bottom: 0.25rem;
    border-bottom: 1px solid var(--color-border);
}
.lightbox-attack, .lightbox-ability {
    margin-bottom: 0.75rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px dashed var(--color-border);
}
.lightbox-attack:last-child, .lightbox-ability:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    border-bottom: none;
}
.tcg-cost-icon {
    display: inline-block;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    background-size: cover;
    margin: 0 1px;
    vertical-align: middle;
    border: 1px solid rgba(0,0,0,0.3);
}
/* Add background images for TCG cost icons if you have them */
/* Add to dex/css/loading.css */

/* Enhanced initial loading state that waits for all content */
.initial-loading-overlay.loaded {
    opacity: 0;
    visibility: hidden;
    transition-delay: 0s; /* Remove delay for hiding */
    pointer-events: none; /* Prevent interaction when hidden */
}

/* Ensure grid properly displays load state */
#pokedex-grid {
    min-height: 300px; /* Ensure space for loader */
    position: relative;
}

/* Improved animation for loader to make it more visible */
.spinner {
    width: 40px;
    height: 40px;
    border: 4px solid rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    border-top-color: var(--color-primary, #ef4444);
    animation: spin 1s ease-in-out infinite;
    margin: 0 auto;
}

/* Enhanced transition for grid items to fade in smoothly */
.pokedex-grid-card {
    animation: fadeInCard 0.4s ease forwards;
    opacity: 0;
}

@keyframes fadeInCard {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Stagger card animations for more pleasing visual effect */
.pokedex-grid-card:nth-child(10n+1) { animation-delay: 0.05s; }
.pokedex-grid-card:nth-child(10n+2) { animation-delay: 0.1s; }
.pokedex-grid-card:nth-child(10n+3) { animation-delay: 0.15s; }
.pokedex-grid-card:nth-child(10n+4) { animation-delay: 0.2s; }
.pokedex-grid-card:nth-child(10n+5) { animation-delay: 0.25s; }
.pokedex-grid-card:nth-child(10n+6) { animation-delay: 0.3s; }
.pokedex-grid-card:nth-child(10n+7) { animation-delay: 0.35s; }
.pokedex-grid-card:nth-child(10n+8) { animation-delay: 0.4s; }
.pokedex-grid-card:nth-child(10n+9) { animation-delay: 0.45s; }
.pokedex-grid-card:nth-child(10n+10) { animation-delay: 0.5s; }
/* Add to dex/css/loading.css */

/* Enhanced progress bar */
.progressBar {
    width: 100%;
    background: linear-gradient(120deg, var(--color-primary, #ef4444) 5%, var(--color-secondary, #f97316) 95%);
    height: inherit;
    position: absolute;
    top: 0;
    left: 0;
    /* Start at -100% position (off screen) */
    transform: translateX(-100%);
    transition: transform 0.6s cubic-bezier(0.25, 1, 0.5, 1);
}

/* Animation for grid cards to ensure they're visible */
.pokedex-grid-card.animated {
    animation: cardAppear 0.3s ease forwards;
}

@keyframes cardAppear {
    from { opacity: 0.6; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
}

/* Make loader more visible */
.spinner {
    border: 3px solid rgba(255, 255, 255, 0.1);
    border-radius: 50%;
    border-top-color: var(--color-primary, #ef4444);
    width: 30px;
    height: 30px;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}